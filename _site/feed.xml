<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-02-08T21:40:22+01:00</updated><id>http://localhost:4000/</id><title type="html">Charisse Writes</title><subtitle>Hey! I'm Charisse. I'm a web developer and artist living an (almost) zero-waste life in Berlin üå±
</subtitle><entry><title type="html">2017: A Year of Change and the Road Ahead</title><link href="http://localhost:4000/personal/2017/12/31/2017-a-year-of-change.html" rel="alternate" type="text/html" title="2017: A Year of Change and the Road Ahead" /><published>2017-12-31T08:00:00+01:00</published><updated>2017-12-31T08:00:00+01:00</updated><id>http://localhost:4000/personal/2017/12/31/2017-a-year-of-change</id><content type="html" xml:base="http://localhost:4000/personal/2017/12/31/2017-a-year-of-change.html">&lt;p&gt;I would say that this year has been all about personal development. And as much as I wanted to level up more on the web development side, I think getting to know myself is also an important step that I shouldn‚Äôt skip.&lt;/p&gt;

&lt;p&gt;I wanted to be a lot of things and I felt confused about what I really want to be (and sometimes it still happens) and for some time I was convinced that I can be anything as long as I take the steps to get there. This prompted me to write down these goals and find a way to achieve them with the limited time I have.&lt;/p&gt;

&lt;p&gt;I want to be an entrepreneur.&lt;/p&gt;

&lt;p&gt;I want to be a published writer.&lt;/p&gt;

&lt;p&gt;I want to be a traveler.&lt;/p&gt;

&lt;p&gt;I want to level up as a developer.&lt;/p&gt;

&lt;p&gt;I want to be so much more.&lt;/p&gt;

&lt;p&gt;But even though I (still) have not become a published writer nor an entrepreneur, it is still nice to look back and see how far I have come not only for the ‚Äúfeel good‚Äù vibes, but also to remind myself that I have come a long way and that these accomplishments are something I should be proud about.&lt;/p&gt;

&lt;p&gt;Below are some of the things that I did this year and what it taught me.&lt;/p&gt;

&lt;h3 id=&quot;1-i-gave-2-presentations&quot;&gt;1: I Gave 2 Presentations&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/wwc-presentation.jpg&quot; alt=&quot;My presentation at Women Who Code Berlin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/zero-waste-presentation.jpg&quot; alt=&quot;My presentation about the Zero Waste lifestyle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I think at some point in our lives, most of us have no desire of talking in front of people. There is just that weird, nerve-wrecking feeling that crawls into our bellies whenever the thought comes to our minds. I remember I even dropped out of giving a presentation as my final project in school years ago. I got away with it, but my grade paid the price.&lt;/p&gt;

&lt;p&gt;But I realised that giving presentations is not so bad after all ‚Äî especially if its about a topic that you really cared about (guess I didn‚Äôt care much about whatever topic that was I had to do in school). The butterflies will probably never go away, but its insignificant once you get into the flow of talking. I cared a lot about goal-setting and I wanted to share what method is currently working for me. It might not work for everyone, but maybe even just a single person from the crowd that night could learn a thing or two ‚Äì and that‚Äôs good enough. I also cared a lot about sustainability and I would have given more presentations if I had another chance.&lt;/p&gt;

&lt;h3 id=&quot;2-level-up-my-zero-waste-lifestyle-and-embraced-minimalism&quot;&gt;2: Level up my Zero Waste lifestyle and embraced minimalism&lt;/h3&gt;
&lt;p&gt;Late 2016, I kickstarted my journey towards a zero waste lifestyle. I started with just swapping plastic bags with reusable ones. And this year, I made it a goal to do more than just that. I bought food in bulk, stopped eating unhealthy snacks, cooked more, swapped my toiletries with a sustainable alternatives (and even clean the bathroom with fruit peel-scented vinegar!). I got rid of things that I didn‚Äôt need and learned to value what I already have. It certainly didn‚Äôt happen in a single day and sometimes I slip into buying things that are packaged or go into a small shopping spree, but living this way changed my way of life.&lt;/p&gt;

&lt;p&gt;I honestly think that this lifestyle change made me realize what is really important to me and it gave me the opportunity to figure out what my true values are. Knowing that made me truly happy because it allows me to live according to those values and to not fall into temporary sources of happiness. I met a lot of inspiring people who have similar values as I do and it makes me feel relieved that I am not alone.&lt;/p&gt;

&lt;h3 id=&quot;3-i-invested-in-myself-more&quot;&gt;3: I invested in myself more&lt;/h3&gt;
&lt;p&gt;This might be a regular thing to do for other people, but I feel like this year was the year when I realized how important this actually is. I read constantly. I set aside time for the things that are important to me and I‚Äôve been fortunate enough to travel. Like it or not, money will always be an issue but I‚Äôve been learning how to manage my resources properly, which allowed me to invest in myself in the first place.&lt;/p&gt;

&lt;h3 id=&quot;4-i-worked-towards-my-digital-drawing-style&quot;&gt;4: I worked towards my digital drawing style&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/tarn.png&quot; alt=&quot;Tarn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/heteroclite.png&quot; alt=&quot;Heteroclite&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/oporopolist.png&quot; alt=&quot;Oporopolist&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I think the ongoing &lt;a href=&quot;https://charisseysabel.github.io/the-words-project/#/&quot;&gt;Words Project&lt;/a&gt; is a good example of how much change happened this year. Although this project was initially something that I did to get more into animation, it evolved into something more, which allowed me to hone my digital drawing style into something that I feel that represents me (instead of imitating others‚Äô style). This project, no matter how tedious it can sometimes get, continues to help me express my creativity and imagination; helping me tell untold stories through a still image.&lt;/p&gt;

&lt;h3 id=&quot;5-i-finally-finished-aaghaveagh&quot;&gt;5: I finally finished ‚ÄúAaghaveagh‚Äù&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/aaghaveagh-border-detail.jpg&quot; alt=&quot;Aaghaveagh border detail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/aaghaveagh-roots-detail.jpg&quot; alt=&quot;Aaghaveagh roots detail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/2017/year-of-change/aaghaveagh-complete.jpg&quot; alt=&quot;Aaghaveagh complete&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(pronounced ‚Äúeye-AH-vey‚Äù, according to the internet)&lt;/p&gt;

&lt;p&gt;This drawing taught me that consistency is key to achieving anything. In this case, consistently working on a drawing will eventually lead to its completion. I used to always complain to myself how I got into doing something as crazy as this but could barely muster up the courage to finish it because of how overwhelming such a goal could be. But I learned to shut up and just sit down and work on it incrementally.&lt;/p&gt;

&lt;p&gt;This tree is the first of the 6-part Celtic drawing series that I want to complete.&lt;/p&gt;

&lt;h2 id=&quot;the-road-ahead&quot;&gt;The road ahead&lt;/h2&gt;
&lt;p&gt;On 2018, there are 2 things that I want to work on the most:&lt;/p&gt;

&lt;h3 id=&quot;level-up-as-a-frontend-developer&quot;&gt;Level up as a frontend developer&lt;/h3&gt;
&lt;p&gt;Since 2017 didn‚Äôt felt like I learned a lot on the development side, I want to shift my focus back on it once again. There‚Äôs still a lot about frontend development that I don‚Äôt know about and I want to be able to become more aware of them before I move on to become a fullstack developer. I recently read this article about how to level up as a junior developer and I really liked the idea of learning about high-level concepts instead of a particular technology.&lt;/p&gt;

&lt;p&gt;For now, I will use that as my starting point.&lt;/p&gt;

&lt;h3 id=&quot;speak-more-german&quot;&gt;Speak more German&lt;/h3&gt;
&lt;p&gt;I never thought I would ever learn to speak another language until I learned to speak Italian. Although there are words that I still don‚Äôt understand, I can live in Italy on my own and navigate around without speaking any English to save my life. At some point, I want it to be the same case for my German. I need to encourage myself to speak more and read more.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I am very much looking forward to the year ahead. The plan is to build on top of these achievements, taking into account the things that work and didn‚Äôt and continue working towards my long-term goals.
How has your year been and what are your plans for the coming year?&lt;/p&gt;</content><author><name></name></author><summary type="html">I would say that this year has been all about personal development. And as much as I wanted to level up more on the web development side, I think getting to know myself is also an important step that I shouldn‚Äôt skip.</summary></entry><entry><title type="html">2 Things that I Learned as a UI/UX Interviewer</title><link href="http://localhost:4000/design/lessons/2017/12/02/2-things-that-i-learned-as-a-ui-ux-interviewer.html" rel="alternate" type="text/html" title="2 Things that I Learned as a UI/UX Interviewer" /><published>2017-12-02T08:00:00+01:00</published><updated>2017-12-02T08:00:00+01:00</updated><id>http://localhost:4000/design/lessons/2017/12/02/2-things-that-i-learned-as-a-ui-ux-interviewer</id><content type="html" xml:base="http://localhost:4000/design/lessons/2017/12/02/2-things-that-i-learned-as-a-ui-ux-interviewer.html">&lt;p&gt;I‚Äôve been on both sides of the interview process. And although there is a lot to say on what to do and what not to do as a interviewee, I thought I‚Äôd share the lessons that I‚Äôve learned as an interviewer so that designers, who are just getting started in the field, can get an idea on what goes into an interviewer‚Äôs mind.&lt;/p&gt;

&lt;p&gt;These are all my opinions and may or may not be the same for every organization.&lt;/p&gt;

&lt;h2 id=&quot;your-portfolio-matters-more-than-your-years-of-experience&quot;&gt;Your portfolio matters more than your years of experience&lt;/h2&gt;

&lt;p&gt;I have interviewed designers with as much as 9 years of experience. Receiving applications like these made me so excited in the beginning because I expected these people to have a breath of experience and skills to bring to the table. And naturally, I expected that I can learn a lot from these people if we hire them. But it turns out that that is not always case and I realised that even if you do have 10 years of experience, if your portfolio is not intriguing in the first 5 minutes, you might not make it past the initial screening at all. That doesn‚Äôt mean that having an experience is not important (it is) but that entirely depends on what you did those years. If you only created the same designs for the past five years, then perhaps you wasted those years and missed the opportunity to grow. Even if the company you work for is producing a single design template, that does not give you an excuse to do something else on your free time.&lt;/p&gt;

&lt;p&gt;So, work on your portfolio. Come up with side projects if you don‚Äôt have much to show. Showcase the work that you are most proud of ‚Äî the projects that you want to talk more about ‚Äî and spend some time to write about it. Having a portfolio with just a bunch of pictures of mockups thrown in it feels half-baked. Write about your challenges and write about how you solved it.&lt;/p&gt;

&lt;h2 id=&quot;all-design-decisions-are-valid-but-not-all-of-them-are-right&quot;&gt;All design decisions are valid, but not all of them are right&lt;/h2&gt;

&lt;p&gt;That said, as the interviewer and a designer myself, I‚Äôd like to get deeper into your mind and find out how you came up with the design in the first place. Its easy to be driven by the trends and the inspiration you found around the web, but you have to be able to stand by your decisions on why you designed it that way. Especially if you designed an application interface, you have to be able to solve a problem through your design and every element has to have a reason why its there.&lt;/p&gt;

&lt;p&gt;For example, if you designed an interface with a hamburger menu, you have to be able to provide a stronger reason why you used that pattern aside from the fact that you‚Äôve seen it in almost every website you‚Äôve visited. Although that is a legitimate reason, its not always what will convince an interviewer to hire you because you‚Äôre basically following other people‚Äôs decisions and not your own.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Aside from showing yours soft skills like your willingness to learn and grow, ability to work in a team, and generally being a nice person, your portfolio and your ability to reason about your decisions are the most important things that you can use to convince the interviewer that you can do the job in the company you want to work for.&lt;/p&gt;</content><author><name></name></author><summary type="html">I‚Äôve been on both sides of the interview process. And although there is a lot to say on what to do and what not to do as a interviewee, I thought I‚Äôd share the lessons that I‚Äôve learned as an interviewer so that designers, who are just getting started in the field, can get an idea on what goes into an interviewer‚Äôs mind.</summary></entry><entry><title type="html">A Gentle Introduction to CSS Grid</title><link href="http://localhost:4000/tutorial/2017/10/15/a-gentle-introduction-to-css-grid.html" rel="alternate" type="text/html" title="A Gentle Introduction to CSS Grid" /><published>2017-10-15T09:00:00+02:00</published><updated>2017-10-15T09:00:00+02:00</updated><id>http://localhost:4000/tutorial/2017/10/15/a-gentle-introduction-to-css-grid</id><content type="html" xml:base="http://localhost:4000/tutorial/2017/10/15/a-gentle-introduction-to-css-grid.html">&lt;p&gt;I wanted to take a look at CSS Grid for quite a while, so I rebuilt an old project using it.&lt;/p&gt;

&lt;p&gt;CSS Grids allow us to design a layout in a 2-dimensional style: horizontally and vertically. Unlike flexbox, which is only focused on only 1 dimension.&lt;/p&gt;

&lt;p&gt;I must admit that I was a bit hesitant about the idea of Grid because of the fact that flexbox has solved the problems that I faced with layouts today (at least most of them anyway).&lt;/p&gt;

&lt;h4 id=&quot;but-what-exactly-is-the-difference-between-css-grid-and-flex-box&quot;&gt;But what exactly is the difference between CSS Grid and flex box?&lt;/h4&gt;
&lt;p&gt;Rachel Andrew‚Äôs example was a good reference point for me to understand the difference. Basically, a layout that does not depend on the content‚Äôs width and height can benefit from a Grid layout. While a layout that needs its contents to flow and stretch would most likely have to use flexbox instead. But who says you can‚Äôt use them both at the same time?&lt;/p&gt;

&lt;p&gt;As a simple exercise, I want to rebuild my FCC project: Quote Generator. Currently this was built using absolute positioning, which is fine but not exactly that elegant. It‚Äôs worth looking back at it and see how CSS Grid can make a difference.&lt;/p&gt;

&lt;p&gt;Imagine adding an invisible grid on top of this layout. In the graphic design world, this is like activating the rulers inside Photoshop, which is what we usually do when it comes to aligning our items perfectly on the page. We create columns to align everything vertically, and set rows to align items horizontally.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/with-guides.png&quot; alt=&quot;Setting guides... you know what I mean&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;how-do-we-replicate-this-in-code&quot;&gt;How do we replicate this in code?&lt;/h4&gt;
&lt;p&gt;If you‚Äôve used Flexbox before, then its helpful to think that it works pretty much the same for Grid: enclosing a group of elements together inside a grid display activates a bunch of other attributes that can only be used inside the grid container.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;grid-container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;grid-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;A reader lives a thousand lives before he dies, the man who never reads lives only one.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Alison Croggon, the Naming&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.grid-container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next, we can define our columns and rows using &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-template-columns&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-template-rows&lt;/code&gt; which take a space-separated list of values. In our mock example, I‚Äôm setting the leftmost column to &lt;code class=&quot;highlighter-rouge&quot;&gt;300 pixels&lt;/code&gt; and let the second column occupy the rest. You can set as many as you want depending on how many elements you have inside the grid-container. If you set less values than elements, the extra elements will automatically wrap and create a new row, following the same format as the row above it.&lt;/p&gt;

&lt;p&gt;I‚Äôm also setting the topmost row to be &lt;code class=&quot;highlighter-rouge&quot;&gt;200px&lt;/code&gt; high and let the second column occupy the rest of the space.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.grid-container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;grid-template-column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;grid-template-rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/with-grid.png&quot; alt=&quot;Visualizing the grid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A grid layout also wouldn‚Äôt be complete if there‚Äôs no way to add gaps between the items. We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-row-gap&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-column-gap&lt;/code&gt; to do just that. This might be useful should we add content to our currently-empty sidebar in the future. I like this feature a lot because it helps avoid the use of a container padding altogether.&lt;/p&gt;

&lt;p&gt;Optionally, we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-gap&lt;/code&gt; as a shorthand notation for the 2 attributes above.&lt;/p&gt;

&lt;p&gt;Now, all that‚Äôs left is to explicitly position our quote at the bottom-right of our grid. We can do this using &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-column&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-row&lt;/code&gt;. In the code below, we specify our item to start at grid line #2 (setting only one value makes the element stretch all the way to the last column). We do the same for the row position.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/grid-columns-and-rows.png&quot; alt=&quot;Grid and column lines&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.grid-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;grid-column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;grid-row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;what-about-responsiveness&quot;&gt;What about responsiveness?&lt;/h4&gt;
&lt;p&gt;Responsiveness can be achieved through the combination of media queries and modifying our &lt;code class=&quot;highlighter-rouge&quot;&gt;grid-template-columns&lt;/code&gt; into a single value, forcing the elements to align vertically and re-arrange our grid-item‚Äôs columns and rows accordingly. It‚Äôs not very elegant, but it does the job.&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;CSS Grids allow us to design a layout in 2 dimensions: horizontally and vertically. A layout that does not depend on the content‚Äôs width and height can most certainly benefit from using Grid. Despite it being not entirely supported yet, especially in the older versions of IE, CSS Grid gives us an entirely new way of building layout for our websites. Definitely worth keeping an eye out for!&lt;/p&gt;</content><author><name></name></author><summary type="html">I wanted to take a look at CSS Grid for quite a while, so I rebuilt an old project using it.</summary></entry><entry><title type="html">Test-Driven Development with Mocha and Chai</title><link href="http://localhost:4000/tutorial/2017/09/15/test-driven-development-with-mocha-and-chai.html" rel="alternate" type="text/html" title="Test-Driven Development with Mocha and Chai" /><published>2017-09-15T09:00:00+02:00</published><updated>2017-09-15T09:00:00+02:00</updated><id>http://localhost:4000/tutorial/2017/09/15/test-driven-development-with-mocha-and-chai</id><content type="html" xml:base="http://localhost:4000/tutorial/2017/09/15/test-driven-development-with-mocha-and-chai.html">&lt;p&gt;So what exactly is Test-Driven Development?&lt;/p&gt;

&lt;p&gt;Based on my understanding after reading a couple articles, Test-Driven Development (TDD) is the process by which you write tests for your code to make sure that it works as expected. You do this even before you start to write a single line of code and then you allow your code to adapt to the test and make it pass. The benefit of it is that it helps keep your code clean and do what it‚Äôs supposed to do. With a well-written test, you can refactor your code safely over and over knowing that the functionality has not been broken.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Behavior&lt;/em&gt;-Driven Development (or BDD) is a branch of TDD. I find it really hard to figure out the difference between the two aside from the fact that BDD has a much easier to read syntax than TDD. It‚Äôs almost like a human-readable sentence! From the articles that I‚Äôve read and the people I‚Äôve asked, they said that BDD is almost like user stories. BDD tests the functionality as a whole, compared to TDD, which only tests a single unit or function (which is likely to be a part of the overall behaviour itself)&lt;/p&gt;

&lt;h2 id=&quot;test-driven-development-with-mocha--chai&quot;&gt;Test-Driven Development with Mocha + Chai&lt;/h2&gt;
&lt;h4 id=&quot;what-is-mocha&quot;&gt;What is Mocha?&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://mochajs.org/#installation&quot;&gt;Mocha&lt;/a&gt; is one of the popular Javascript testing framework out there. It provides us with an environment from which we can automate our tests. And that environment happens to run on NodeJS.&lt;/p&gt;

&lt;h4 id=&quot;what-is-chai&quot;&gt;What is Chai?&lt;/h4&gt;
&lt;p&gt;To write a test, we need additional plugins like Chai. Chai is an assertion library. You can think of an assertion library as a language that is spoken inside a testing framework (in our case, Mocha). You can still use vanilla JS inside a testing framework though, for example, when declaring variables and functions, but to actually do the ‚Äútesting‚Äù, you have to switch to the proper language. There are many assertion libraries out there, as you can see from &lt;a href=&quot;http://mochajs.org/#assertions&quot;&gt;Mocha‚Äôs Assertions&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;I‚Äôm a bit biased in the sense that this is the testing framework and assertion library that we use at &lt;a href=&quot;https://www.small-improvements.com/&quot;&gt;Small Improvements&lt;/a&gt;, so I wanted to learn more about it and hopefully be able to contribute on this part of the codebase in the near future. But just a few google searches alone and you‚Äôll see that there are many more frameworks out there such as &lt;a href=&quot;https://github.com/avajs/ava&quot;&gt;Ava&lt;/a&gt;, &lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon&lt;/a&gt;, &lt;a href=&quot;https://github.com/substack/tape&quot;&gt;Tape&lt;/a&gt; and &lt;a href=&quot;https://jasmine.github.io/&quot;&gt;Jasmine&lt;/a&gt;. I haven‚Äôt actually tried them myself but I‚Äôm going to keep them at the back of my mind when building my next personal project.&lt;/p&gt;

&lt;h4 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;This tutorial assumes that you already have a project folder set up with npm and Node installed. At the time of writing, I‚Äôm using a node version &lt;strong&gt;__ and an npm version __&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// a very simple folder structure&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;installation&quot;&gt;Installation&lt;/h4&gt;
&lt;p&gt;Installing a testing framework is just as easy as installing as another framework through npm:&lt;/p&gt;

&lt;p&gt;On the code below, we‚Äôll install Mocha and Chai as a local dependency on our project
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev mocha chai&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;warm-up-writing-our-first-test&quot;&gt;Warm up: Writing our first test&lt;/h2&gt;
&lt;p&gt;For our Mocha interface, we will use &lt;a href=&quot;http://mochajs.org/#interfaces&quot;&gt;BDD system&lt;/a&gt; for ease of readability. The BDD system will provide us with chainable functions such as &lt;code class=&quot;highlighter-rouge&quot;&gt;describe()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;it()&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;before()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, inside &lt;code class=&quot;highlighter-rouge&quot;&gt;test.js&lt;/code&gt;, we want to &lt;em&gt;describe&lt;/em&gt; what we are testing.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'my function'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The first argument is a string that describes the functionality that you‚Äôre testing. Ideally, its the function‚Äôs name but you can name it whatever you want. It‚Äôs a reference for you, so that when you run your tests later, you know exactly what they are.&lt;/p&gt;

&lt;p&gt;Inside the describe block, we want to test the functionality that our function has to fulfill. We require &lt;a href=&quot;http://chaijs.com/api/assert/&quot;&gt;Chai‚Äôs assert interface&lt;/a&gt; at the top of the file and access its &lt;code class=&quot;highlighter-rouge&quot;&gt;strictEqual&lt;/code&gt; method to compare two values. For now, let‚Äôs make our test fail.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chai'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'my function'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should be equal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isTrue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strictEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;running-tests&quot;&gt;Running tests&lt;/h2&gt;
&lt;p&gt;In our package.json, you can change the &lt;code class=&quot;highlighter-rouge&quot;&gt;tests&lt;/code&gt; script to run mocha:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mocha&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and then on the Terminal, you can simply run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm test&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/failed-test.png&quot; alt=&quot;A failed test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you‚Äôve run the command, you‚Äôll see that your test failed because, well, your values are not strictly (===) equal. You can change either value and run the command again to see how a successful test looks like!&lt;/p&gt;

&lt;h2 id=&quot;replicating-freecodecamps-piglatin-test&quot;&gt;Replicating FreeCodeCamp‚Äôs PigLatin Test&lt;/h2&gt;
&lt;p&gt;Now that we have a basic idea on how to write tests using Mocha and Chai, let‚Äôs step our game up a bit and replicate the &lt;a href=&quot;https://www.freecodecamp.org/challenges/pig-latin&quot;&gt;PigLatin challenge on FCC&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// index.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pigLatin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'u'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'o'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'w'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ay'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pigLatin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// export the function so we can import it somewhere else&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// test.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chai'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pigLatin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;california&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;algorithm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'piglatin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// we call the function inside the `before` block before we test it for equality&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;california&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pigLatin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'california'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;algorithm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pigLatin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'algorithm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should return a string'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pigLatin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should be aliforniacay'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'aliforniacay'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strictEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;california&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should be algorithmway'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'algorithmway'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strictEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;algorithm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/img/passing-test.png&quot; alt=&quot;A passing test&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We scratched the surface of Test-Driven Development and implemented tests that challenged our understanding.&lt;/p&gt;

&lt;p&gt;Writing a good tests are important for every codebase. It ensures that we deliver as little buggy software to our users as possible. At first I thought that TDD is a very big and daunting task, but it turned out to be really fun!&lt;/p&gt;

&lt;p&gt;What are you going to test next?&lt;/p&gt;</content><author><name></name></author><summary type="html">So what exactly is Test-Driven Development?</summary></entry><entry><title type="html">3 Things to Keep in Mind When Starting a Blog</title><link href="http://localhost:4000/personal/development/2017/09/02/3-things-to-keep-in-mind-when-starting-a-blog.html" rel="alternate" type="text/html" title="3 Things to Keep in Mind When Starting a Blog" /><published>2017-09-02T09:00:00+02:00</published><updated>2017-09-02T09:00:00+02:00</updated><id>http://localhost:4000/personal/development/2017/09/02/3-things-to-keep-in-mind-when-starting-a-blog</id><content type="html" xml:base="http://localhost:4000/personal/development/2017/09/02/3-things-to-keep-in-mind-when-starting-a-blog.html">&lt;p&gt;Sometimes we just need to remind ourselves why we want to dive into the world of blogging.&lt;/p&gt;

&lt;p&gt;3 things, here we go.&lt;/p&gt;

&lt;h4 id=&quot;what-is-your-goal&quot;&gt;What is your goal?&lt;/h4&gt;
&lt;p&gt;It‚Äôs important to keep in mind why you want to start / started blogging in the first place. I firmly believe that this will help you keep going during those times when you feel like you want to quit.&lt;/p&gt;

&lt;p&gt;My purpose for this blog is to be able to explain things to myself ‚Äî as selfish as that sounds. Technical concepts don‚Äôt sink in in my head right away so I always need to find a way to explain it to myself in much simpler terms. I‚Äôm sure there are a lot of developers out there who feels the same way, maybe junior developers like me. If you find my stuff useful, that‚Äôs great! If I start earning money from this blog, then I would consider that as a huge bonus.&lt;/p&gt;

&lt;h4 id=&quot;you-shouldnt-feel-like-you-have-to-know-everything-before-you-start-writing-about-it&quot;&gt;You shouldn‚Äôt feel like you have to know everything before you start writing about it&lt;/h4&gt;
&lt;p&gt;As I sit here thinking about how to start my next tutorial, I started looking at similar tutorials and I realised that the topic is bigger than I thought. It made me feel like I should ‚Äúback-off‚Äù because it feels like I‚Äôm not skilled enough for it. Maybe I can come back to this topic after a couple months and I wouldn‚Äôt feel such an imposter anymore. But the question is, ‚ÄúWill that day ever come?‚Äù&lt;/p&gt;

&lt;p&gt;It‚Äôs normal to be uncomfortable with what you don‚Äôt know. The only way to get past it is to go through it with the knowledge that you already have. If you fail the first time, then at least you learned how to do better on your next try.&lt;/p&gt;

&lt;p&gt;If you‚Äôre like me, who‚Äôs doubting my own blogging skills, think of this quote from the book, Developer Soft Skills:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is always someone out there who knows a little less than you and might find your stuff useful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And if not, at least pat yourself on the back for getting your head around a concept. That is an achievement on its own.&lt;/p&gt;

&lt;h4 id=&quot;writing-takes-time&quot;&gt;Writing takes time&lt;/h4&gt;
&lt;p&gt;A rarely-updated blog isn‚Äôt good if you want to get something out of it so make it a habit to write a few articles every month. For example, my current goal is to be able to publish an article every 2 weeks. You can write more or less than that, its up to you. Set up a queue of articles that will be published over a course of time so that you can have more time for other things. Be flexible and change your schedule if it ends up stressing you out.&lt;/p&gt;

&lt;p&gt;Your first blog post will suck‚Ä¶ as well as the couple ones after it. That‚Äôs okay; just keep writing and you‚Äôll eventually get better over time.&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Even if this post is specifically aimed at developers who want to try blogging, the concepts also apply to other activities. Whether its our goal, the money or the amount of effort it takes to work on a project, its always helpful to remind ourselves ‚Äì from time to time ‚Äì about the reason behind why we do certain things.&lt;/p&gt;</content><author><name></name></author><summary type="html">Sometimes we just need to remind ourselves why we want to dive into the world of blogging.</summary></entry><entry><title type="html">Living Zero Waste</title><link href="http://localhost:4000/lifestyle/2017/08/19/living-zero-waste.html" rel="alternate" type="text/html" title="Living Zero Waste" /><published>2017-08-19T09:00:00+02:00</published><updated>2017-08-19T09:00:00+02:00</updated><id>http://localhost:4000/lifestyle/2017/08/19/living-zero-waste</id><content type="html" xml:base="http://localhost:4000/lifestyle/2017/08/19/living-zero-waste.html">&lt;p&gt;Believe it or not, my Zero Waste journey started from a YouTube video. Watching TV has always been my family‚Äôs way of bonding ‚Äì we would sit on the couch with a bowl of dinner on our laps and watch videos of YouTubers playing and screaming while videogames (my mom is a huge fan of video games) or just re-watch Jack Black / Jim Carrey movies after a long day of work in the family‚Äôs cafe.&lt;/p&gt;

&lt;p&gt;But one night, there was a YouTube recommendation of TEDtalks and we so happen to come across a video with a clickbait title called ‚Äú&lt;a href=&quot;https://www.youtube.com/watch?v=pF72px2R3Hg&amp;amp;t=423s&quot;&gt;Why I live a Zero Waste Life&lt;/a&gt;‚Äù. We were so intrigued because its hard to just imagine living without any trash, let alone to actually live it. Every single thing that we purchase comes packaged in one way or another, so is it really possible?&lt;/p&gt;

&lt;p&gt;As I was watching this video, I keep seeing our trash bin from the corner of my eye. It was overflowing with trash ‚Äì from plastic, to baby diapers, to carton boxes wrapped in more plastic, to paper bags ‚Äì down to a tiny freebie toy that comes from a bag of chips. I clean the house everyday and I take the trash out everyday as well and I can‚Äôt help but feel good about having an empty trash can for a couple of hours. But where do those all trash go? There is a saying, ‚ÄúOut of sight, out of mind‚Äù and we basically do the same thing with our trash. Once its in the trash bin and the garbage man collects it and takes it away, its not our problem anymore‚Ä¶. right?&lt;/p&gt;

&lt;p&gt;Wrong.&lt;/p&gt;

&lt;p&gt;That‚Äôs why I made a decision to change.&lt;/p&gt;

&lt;h2 id=&quot;what-does-it-mean-to-live-zero-waste&quot;&gt;What does it mean to live Zero Waste?&lt;/h2&gt;
&lt;p&gt;According to Lauren Singer (the girl in the video):&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Zero Waste means that I do not produce any garbage. No sending anything to landfill, no throwing anything in a trash can, nothing. However, I do recycle and I do compost.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what I aim for.
Nowadays, the only things that goes into my trash can are fallen hair, paper that I‚Äôve used both sides on, and organic waste (because we don‚Äôt have brown bins in the building)&lt;/p&gt;

&lt;p&gt;So the question now is, how can we actually reduce our trash?&lt;/p&gt;

&lt;h2 id=&quot;the-5-rs-of-zero-waste&quot;&gt;The 5 R‚Äôs of Zero Waste&lt;/h2&gt;
&lt;p&gt;According to Bea Johnson, the founder of the Zero Waste movement, we only have to follow 5 rules in order to live sustainably&lt;/p&gt;

&lt;h4 id=&quot;refuse-what-you-dont-need&quot;&gt;Refuse what you don‚Äôt need&lt;/h4&gt;
&lt;p&gt;Refuse paper bags, single-use plastic and disposables.
I also refuse freebies for example, in conferences. I went to a meetup where the company who was hosting it was giving a way a tote bag with freebies including a notebook, stickers, and a powerbank. It all seems like great things to have but as the meetup was progressing, I kept asking myself, ‚ÄúDo I really need this?‚Äù I have a powerbank that I can barely use, I already have 4 reusable tote bags, I have tons of paper to be upcycled into a notebook and I certainly don‚Äôt find value in having that company‚Äôs sticker.&lt;/p&gt;

&lt;h4 id=&quot;reduce-what-you-do-need&quot;&gt;Reduce what you do need&lt;/h4&gt;
&lt;p&gt;Reduce the clutter in your life by getting rid of things that don‚Äôt give you value.
Yes, this might sound like you‚Äôre giving your trash away to other people but you‚Äôll find that those things that you don‚Äôt really need will give a ton of value to other people. For example, your clothes. How much of those do you actually wear and how much of those are actually just sitting in the back of the cabinet waiting for the ‚Äúperfect occasion‚Äù?&lt;/p&gt;

&lt;p&gt;I once bought a flowery skirt thinking that maybe one day I‚Äôll feel girly enough to wear it. I gave it away unused because that day never came. I didn‚Äôt miss that skirt at all.&lt;/p&gt;

&lt;p&gt;Strive to live minimally. Let go of the things that are laying around in your garage, cabinets, boxes, etc. We need less than we think we do.&lt;/p&gt;

&lt;h4 id=&quot;reuse-by-swapping-for-reusables&quot;&gt;Reuse by swapping for reusables&lt;/h4&gt;
&lt;p&gt;Some people say that if you‚Äôre going Zero Waste, you have to start from scratch. People say that you need to have a stainless steel water bottle, a stainless steel or glass containers, etc. I think that‚Äôs wrong.&lt;/p&gt;

&lt;p&gt;Tupperwares may be made of plastic, but I don‚Äôt feel the need to give it away because I can reuse it for a very long time. Anything that you already have and that can be reused like a water bottle, bento box, etc in place of disposable ones are good enough.&lt;/p&gt;

&lt;h4 id=&quot;recycle-what-you-cannot-refuse-reduce-or-reuse&quot;&gt;Recycle what you cannot refuse, reduce or reuse&lt;/h4&gt;
&lt;p&gt;Once you‚Äôve refused, reduced, and reused most of your stuff, you‚Äôll find that you don‚Äôt really have much to send to the recycling facility and that‚Äôs great because let‚Äôs face it ‚Äì you can only recycle something a couple times.&lt;/p&gt;

&lt;p&gt;When we send something to be recycled, often times those things get mixed in with other things in order for them to become new products and those products might not be recyclable anymore because it might not be possible to break its components down into reusable pieces and so eventually, they still go to the landfill. I‚Äôve heard / read things like ‚Äúpaper can only be recycled 5 to 7 times‚Äù and the more you recycle them, the more chemicals they need to be made into paper again :(&lt;/p&gt;

&lt;h4 id=&quot;rot-compost-the-rest&quot;&gt;Rot (compost) the rest&lt;/h4&gt;
&lt;p&gt;This is the part of living Zero Waste that I haven‚Äôt yet achieved because I live in a shared flat without a garden nor a brown bin for organic waste. But I‚Äôve been looking for ways to change it, for example, joining a local community garden where I can bring my organic waste that can be mixed in soil that will serve as fertiliser. Maybe this time I can fulfill my dream of growing my own food. I might even learn some German farming words&lt;/p&gt;

&lt;p&gt;And that‚Äôs it! I found that once you follow these 5 principles, you‚Äôll soon earn its benefits.&lt;/p&gt;

&lt;h2 id=&quot;the-benefits-of-living-zero-waste&quot;&gt;The Benefits of Living Zero Waste&lt;/h2&gt;
&lt;h4 id=&quot;helps-the-environment&quot;&gt;Helps the environment&lt;/h4&gt;
&lt;p&gt;You send little to nothing to the landfill, you reuse what‚Äôs already out there and you don‚Äôt contribute to the demand for things that reduces our natural resources.&lt;/p&gt;

&lt;h4 id=&quot;health-improvements&quot;&gt;Health improvements&lt;/h4&gt;
&lt;p&gt;When you live Zero Waste, its normal that you have to cook. And when you cook your own food with raw ingredients, you know what goes in it. You don‚Äôt have products laying around with ingredients you can‚Äôt even pronounce.&lt;/p&gt;

&lt;h4 id=&quot;more-freedom&quot;&gt;More freedom&lt;/h4&gt;
&lt;p&gt;It‚Äôs not just physical freedom of having more space. But also having the time to do what‚Äôs more important.&lt;/p&gt;

&lt;h4 id=&quot;teaches-you-to-live-slow&quot;&gt;Teaches you to live slow&lt;/h4&gt;
&lt;p&gt;What does it mean to live slow?
We live in a world right now where everything demands our attention and we react by doing the same. When we live in the fast lane, we often overlook many things and we tend to get stressed faster and sometimes, we often fail to see that happiness or love is where we already are.&lt;/p&gt;

&lt;p&gt;Once we start slowing down, we tend to become more mindful and we notice the things we haven‚Äôt before. Our minds are free of clutter and we tend to become more grateful and energetic and less stressed and don‚Äôt easily get ‚Äúbogged‚Äù (is that a word?) down on the negative stuff.&lt;/p&gt;

&lt;h4 id=&quot;saves-you-&quot;&gt;Saves you $$$&lt;/h4&gt;
&lt;p&gt;This is both a yes and no answer because frankly, some unpackaged stuff can be more expensive that their packaged friends. But remember: what you buy, you vote for.&lt;/p&gt;

&lt;p&gt;It saves you money because 1: you spend waaaaaayyyy less than you did before and 2: you only spend for what needs to be replaced ‚Äì a shirt that‚Äôs too small, food, etc.&lt;/p&gt;

&lt;p&gt;All these benefits sounds great, right? So how do you get started?&lt;/p&gt;

&lt;h2 id=&quot;how-to-get-started&quot;&gt;How to Get Started&lt;/h2&gt;
&lt;h4 id=&quot;first-look-at-your-trash&quot;&gt;First, Look at your trash&lt;/h4&gt;
&lt;p&gt;When you come home tonight, don‚Äôt just mindlessly throw your trash in the bin. Look at it. See what‚Äôs in there. You‚Äôll find that most of the things that you throw away are things that you can find alternatives for or maybe even stuff that you can live without.
If you don‚Äôt know what your problem is, you can‚Äôt find the solution for it.&lt;/p&gt;

&lt;h4 id=&quot;start-small&quot;&gt;Start small&lt;/h4&gt;
&lt;p&gt;As much as you want to live without trash from now on, change takes time. You want to introduce small changes in your life so that you don‚Äôt overwhelm yourself and raise your hands one day and say, ‚ÄúNope, can‚Äôt do this; it‚Äôs too difficult‚Äù.&lt;/p&gt;

&lt;p&gt;Start forming a habit of skipping the aisle in the grocery store until you get used to it. Make it a habit to go to the bulk store every week. Change is hard but if you keep doing it, it will become easier and will become normal. It will become normal to refuse plastic. It will become normal to have reusable bags in your backpack for impromptu trips to the market.&lt;/p&gt;

&lt;p&gt;The first thing that I quit was individually-wrapped chocolate (because I love chocolate and I used to eat a couple after every meal). Then I moved to using newspaper for picking up my dog‚Äôs waste. Then I stopped buying juice and made my own (tastes so much better). Then it goes on and on and on.&lt;/p&gt;

&lt;h4 id=&quot;be-creative&quot;&gt;Be creative&lt;/h4&gt;
&lt;p&gt;There was a time when I was cooking almost the same meals every week and eventually I started getting the feeling that I‚Äôm getting so tired of the taste of cauliflower. But it turns out that there‚Äôs so many cauliflower recipes out there and the last cauliflower dish I cooked didn‚Äôt taste like cauliflower at all. I made vegetarian meatballs out of cauliflower, quinoa and some rice. I‚Äôve never had quinoa before but I was so excited to try out something new.&lt;/p&gt;

&lt;p&gt;When you‚Äôre excited, you have fun. When you‚Äôre having fun, what you do doesn‚Äôt feel like a task.
Being creative also forces you to think of alternatives. Need an all-purpose cleaner? Make your own. Need to clean the windows? All you need is damp newspaper.&lt;/p&gt;

&lt;h4 id=&quot;stick-to-your-values&quot;&gt;Stick to your values&lt;/h4&gt;
&lt;p&gt;Living Zero Waste will constantly challenge you to refuse, reduce and reuse. At some point, I asked myself:
‚ÄúWhy am I doing this again? Why should spend 2 hours of my day commuting back and forth to the bulk store when the supermarket is right around the corner and has everything that I need?‚Äù&lt;/p&gt;

&lt;p&gt;The answer: It‚Äôs because I want to live in a way that aligns with my values. I value the environment (we all do in one way or another). I value my health and I value my family‚Äôs health that‚Äôs why I would go so far as buying something organic even if it costs a little more. Money is not the reason why I‚Äôm living this way (but that doesn‚Äôt mean I don‚Äôt have a budget)&lt;/p&gt;

&lt;p&gt;So get some alone time and try to get to know yourself because when the time comes that you have to make a decision, your values will help you decide if its the right thing to do.&lt;/p&gt;

&lt;h4 id=&quot;pay-it-forward&quot;&gt;Pay it forward&lt;/h4&gt;
&lt;p&gt;If you know someone who might be interested in this idea, tell it to them. You don‚Äôt have to tell them that they should do it but rather, help them become aware of this idea. I shared this lifestyle to everyone because I realised that I can‚Äôt save the world on my own.&lt;/p&gt;

&lt;p&gt;We don‚Äôt have to wait for a climate change agreement. Change starts from us. Change starts from our home and the more other people see the good changes in our lives, the more likely they will be inspired to try it out.&lt;/p&gt;</content><author><name></name></author><summary type="html">Believe it or not, my Zero Waste journey started from a YouTube video. Watching TV has always been my family‚Äôs way of bonding ‚Äì we would sit on the couch with a bowl of dinner on our laps and watch videos of YouTubers playing and screaming while videogames (my mom is a huge fan of video games) or just re-watch Jack Black / Jim Carrey movies after a long day of work in the family‚Äôs cafe.</summary></entry><entry><title type="html">The Grunt Task Runner</title><link href="http://localhost:4000/tutorial/2017/08/05/the-grunt-task-runner.html" rel="alternate" type="text/html" title="The Grunt Task Runner" /><published>2017-08-05T12:00:00+02:00</published><updated>2017-08-05T12:00:00+02:00</updated><id>http://localhost:4000/tutorial/2017/08/05/the-grunt-task-runner</id><content type="html" xml:base="http://localhost:4000/tutorial/2017/08/05/the-grunt-task-runner.html">&lt;p&gt;Task runners are great for automating tasks. Small, repetitive tasks such as minifying, uglifying or even just watching our files for changes can easily take up our time.&lt;/p&gt;

&lt;p&gt;I‚Äôve read some articles online that says automation was once done using shell scripts. I haven‚Äôt really tried that myself (but now I‚Äôm really curious) but now that frontend technologies have evolved drastically these past few years, task runners like &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; and &lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; took our frontend environment another step forward.&lt;/p&gt;

&lt;p&gt;In this post, I experimented about the basic Grunt setup and learned how to automate a task like compiling LESS files to normal CSS and watching for file changes. I didn‚Äôt really have a special preference whether to use Grunt or Gulp. I haven‚Äôt used any of them in any of my projects so I just picked one and moved on.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Before we get started, make sure you have the latest version of Node and NPM. At the time of writing, I am using Node v8.2.1 and NPM v5.3.0. Further in the tutorial, I will assume that you have a npm project installed through &lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Folder&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Structure&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;less&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gruntfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;So the first thing we have to do is install &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt-cli&lt;/code&gt;  globally by running: &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g grunt-cli&lt;/code&gt; This will allow us to run the version of Grunt that we will install in our project. The &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt-cli&lt;/code&gt; itself is not the task runner; its only the runner of the task runner :D&lt;/p&gt;

&lt;p&gt;At first I only installed the &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt-cli&lt;/code&gt; locally on my project folder because for trying out new technologies, I really don‚Äôt want to have anything installed globally. But for some reason, it doesn‚Äôt work when its only installed locally which kinda sucks.&lt;/p&gt;

&lt;p&gt;Next, we install &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; by running &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev grunt&lt;/code&gt;. This will create a &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; folder for us.&lt;/p&gt;

&lt;h2 id=&quot;plugins&quot;&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Grunt by itself does not do anything and chances are, if you need to use a task runner, then you probably have something that you want to automate. For a particular task, we need to install a different library, which Grunt refers to as a Plugin. You can find all the different plugins for Grunt in the &lt;a href=&quot;https://gruntjs.com/plugins&quot;&gt;project‚Äôs plugins page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a first example, let‚Äôs say we want to use LESS in our code. Obviously we have to compile that into normal CSS so that the browser can understand it.&lt;/p&gt;

&lt;p&gt;So we can go ahead and install the less plugin by running &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev grunt-contrib-less&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here‚Äôs an example LESS file that we want to compile:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.less&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;gruntfile&quot;&gt;Gruntfile&lt;/h2&gt;
&lt;p&gt;Create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;Gruntfile.js&lt;/code&gt; (note the capital G). In this file will live all configurations that we want Grunt to do for us.&lt;/p&gt;

&lt;p&gt;In this file, we want to export a function, passing in an argument called &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gruntfile.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are 3 main methods that we want to access in the &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; object:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grunt.initConfig&lt;/code&gt; takes an object that specifies the configuration for each of our desired plugin&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grunt.loadNpmTasks&lt;/code&gt; take strings indicating the plugin that we want to use&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grunt.registerTasks&lt;/code&gt; allows you to set the default task for grunt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that I have my LESS plugin installed, I can enable it inside my Gruntfile by calling the &lt;code class=&quot;highlighter-rouge&quot;&gt;loadNpmTasks&lt;/code&gt; method and passing it the name of our plugin:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gruntfile.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'grunt-contrib-less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;the-less-plugin&quot;&gt;The LESS plugin&lt;/h4&gt;
&lt;p&gt;Next, we access grunt‚Äôs &lt;code class=&quot;highlighter-rouge&quot;&gt;initConfig&lt;/code&gt; method where we pass an object that contains the configuration for the tasks that we want to automate. Note that every plugin might have a different way of configuration so its best to refer to their documentation!&lt;/p&gt;

&lt;p&gt;Here, we specify a &lt;code class=&quot;highlighter-rouge&quot;&gt;development&lt;/code&gt; object for our LESS task:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gruntfile.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./assets/main.less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./build/main.css'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./assets/main.less'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'grunt-contrib-less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;options&lt;/code&gt;  take &lt;code class=&quot;highlighter-rouge&quot;&gt;paths&lt;/code&gt; where we specify an array, a single string, or a function that leads to our source LESS file(s). There are other options that we can add but we‚Äôll keep it simple for this example. Alternatively, you can omit this object entirely if you don‚Äôt have additional options; it will work just the same.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;files&lt;/code&gt;  take an object with its key pointing to the resulting CSS file and its value being the path to the source LESS file.&lt;/p&gt;

&lt;p&gt;Now if you run &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt less&lt;/code&gt; on the command line, you will see that our task runner will compile our LESS file and create a &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; folder for us, containing our compiled CSS file!&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;registerTasks&lt;/code&gt; method allow us to specify what tasks to run if there are no tasks specified, for example if you just type &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; and not &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt less&lt;/code&gt;. This method takes 2 arguments: an alias (or a name for a task, which is called &lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt; by default) and an array of tasks.&lt;/p&gt;

&lt;p&gt;So in the code below, we could say that we want our LESS files to compile whenever we run &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gruntfile.js&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({...});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, if you run &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; on the command line, it will do the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt less&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you have configured all the tasks that you want to automate, it would be nice if we don‚Äôt have to repeatedly run &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; everytime we edit / add / delete files. The solution, of course, is to automate the task runner itself!&lt;/p&gt;

&lt;h4 id=&quot;the-watch-plugin&quot;&gt;The Watch plugin&lt;/h4&gt;
&lt;p&gt;Start by installing &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt-contrib-watch&lt;/code&gt; and save it to your devDependencies.&lt;/p&gt;

&lt;p&gt;Once its installed, enable it inside your Gruntfile by adding another &lt;code class=&quot;highlighter-rouge&quot;&gt;loadNpmTask&lt;/code&gt;  and register it as the default task instead of  &lt;code class=&quot;highlighter-rouge&quot;&gt;less&lt;/code&gt; that we defined earlier.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gruntfile.js&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({..});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'grunt-contrib-watch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'grunt-contrib-less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'watch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Just like the previous task, we will configure the &lt;code class=&quot;highlighter-rouge&quot;&gt;watch&lt;/code&gt; task inside the  &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt.initConfig&lt;/code&gt; method:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gruntfile.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// config for the watch task goes here&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// other tasks&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Inside &lt;code class=&quot;highlighter-rouge&quot;&gt;watch&lt;/code&gt; , we group tasks based on the things we want to watch for, say, the ‚Äústyles‚Äù object for all the styling (it can be named anything you want). We then specify the files we want to watch for inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;files&lt;/code&gt; inside ‚Äústyles‚Äù. In the code below, we are recursively telling Grunt to watch files with a &lt;code class=&quot;highlighter-rouge&quot;&gt;.less&lt;/code&gt; extension in folders and its subfolders.
Once Grunt sees that our &lt;code class=&quot;highlighter-rouge&quot;&gt;.less&lt;/code&gt; files have changed, its going to run the &lt;code class=&quot;highlighter-rouge&quot;&gt;less&lt;/code&gt; task that we‚Äôve specified before.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// inside the watch object&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/**/*.less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Go ahead and run &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; and change the &lt;code class=&quot;highlighter-rouge&quot;&gt;main.less&lt;/code&gt; file. Once you hit save, you‚Äôll see that the &lt;code class=&quot;highlighter-rouge&quot;&gt;less&lt;/code&gt; task ran and updated our code! Pretty cool right? :D&lt;/p&gt;

&lt;h2 id=&quot;where-to-go-from-here&quot;&gt;Where to go from here&lt;/h2&gt;
&lt;p&gt;Here‚Äôs the complete code snippet so far:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gruntfile.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./assets/main.less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./build/main.css'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./assets/main.less'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/**/*.less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'grunt-contrib-watch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadNpmTasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'grunt-contrib-less'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'watch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you‚Äôre working on a modern front end environment, chances are, you‚Äôre also dealing with Javascript.&lt;/p&gt;

&lt;p&gt;Find a way to minify and concatenate your files. Look for the right plugin and read their documentation. If you‚Äôre stuck, search or ask questions on Stack Overflow. Your first few tries might not work and might leave you frustrated. This is natural and the only way to get past it is to keep going and remember to have fun!&lt;/p&gt;</content><author><name></name></author><summary type="html">Task runners are great for automating tasks. Small, repetitive tasks such as minifying, uglifying or even just watching our files for changes can easily take up our time.</summary></entry><entry><title type="html">Goals without Deadlines</title><link href="http://localhost:4000/personal-development/2017/07/15/goals-without-deadlines.html" rel="alternate" type="text/html" title="Goals without Deadlines" /><published>2017-07-15T15:00:00+02:00</published><updated>2017-07-15T15:00:00+02:00</updated><id>http://localhost:4000/personal-development/2017/07/15/goals-without-deadlines</id><content type="html" xml:base="http://localhost:4000/personal-development/2017/07/15/goals-without-deadlines.html">&lt;p&gt;Have you ever failed to reach a goal? Like so many other people out there, I too, have set a goal for myself and in one way or another, failed to reach that goal on a set date.&lt;/p&gt;

&lt;p&gt;This is a blogpost outlining the talk that I have given at Women Who Code Berlin.&lt;/p&gt;

&lt;p&gt;So what exactly are goals? People have different definitions about it but for me, goals are the things or the outcomes that we want to achieve in life. It‚Äôs as simple as that.&lt;/p&gt;

&lt;p&gt;Many self-help or personal development articles out there suggest that we create SMART goals. That is, goals that are Specific, Measurable, Achievable, Realistic, and Timely. And although I used to agree with all of those, I soon found out that deadlines didn‚Äôt work for me very much. So I set out on an epic google research and set some time to do some personal reflection to find out why.&lt;/p&gt;

&lt;h2 id=&quot;the-problem-with-deadlines&quot;&gt;The Problem with Deadlines&lt;/h2&gt;
&lt;p&gt;Creating goals are fun. They are a good source of motivation. But I realised that once I‚Äôve set a date on a goal, I am immediately pressured to do something ‚Äî to keep working; to stay ahead. And that might be a good boost for some people, but I didn‚Äôt like being driven by a due date.&lt;/p&gt;

&lt;p&gt;Once there is pressure, there is also stress. And stress leads to poor performance. I‚Äôve read quite a handful of research findings that stress reduces our rational decision-making skills, makes us short-tempered, kills our attention span, and if you‚Äôre really really stressed, it can actually lead to heart disease.&lt;/p&gt;

&lt;p&gt;But let‚Äôs not forget the feeling of disappointment when we fail to achieve our goal. And that sucks just as much.&lt;/p&gt;

&lt;p&gt;So I decided to stop setting deadlines.&lt;/p&gt;

&lt;h2 id=&quot;the-power-of-a-schedule&quot;&gt;The Power of a Schedule&lt;/h2&gt;
&lt;p&gt;After a bit of research to find more ways to effectively achieve my goals, I came across &lt;a href=&quot;http://jamesclear.com/schedule-goals&quot;&gt;an article from James Clear&lt;/a&gt;. He says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;a better way to approach your goals is to set a schedule to operate by rather than a deadline to perform by&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Having a schedule keeps me organised. For example, every morning when I get in to work, one of the first things that I do is to figure out what I need to do for that day and list them down. It keeps me from procrastinating because I don‚Äôt have to stop and look around for things I need to do because well, I know them ahead of time. Sometimes I even try to figure out what I need to do the night before, and that gives me the mindset of ‚ÄúI have stuff to do‚Äù the next morning, which helps me to not linger in bed for too long.&lt;/p&gt;

&lt;h2 id=&quot;how-to-set-a-schedule&quot;&gt;How to Set a Schedule&lt;/h2&gt;
&lt;h4 id=&quot;plan-ahead&quot;&gt;Plan Ahead&lt;/h4&gt;
&lt;p&gt;The core part of scheduling is figuring out what you need to do ahead of time. I usually sit down and plan stuff out every two weeks. Since I almost always work on multiple goals, I feel 2 weeks is the best time frame for me to finish some tasks compared to monthly or weekly plans. A two-week plan might not work for you, so adjust as you see fit.&lt;/p&gt;

&lt;h4 id=&quot;prioritise&quot;&gt;Prioritise&lt;/h4&gt;
&lt;p&gt;Next, I list down all the things I want to do in the next couple of weeks that‚Äôs related to my goal. I usually don‚Äôt include other activities such as doing groceries, going to work, chores, etc. because I can figure that out in the morning or the night before.&lt;/p&gt;

&lt;p&gt;You want to break down your tasks so that they are small enough but not too small that they become boring and effortless. The reason why we do this is because we want feedback. Knowing that we‚Äôre making progress is a good motivation to keep going.&lt;/p&gt;

&lt;p&gt;Once I have a list, I know that that‚Äôs all I need to focus on in the coming weeks. Then, in the morning, I pick the most important task (or tasks if I know I will have more free time) that I can do in order to make some progress. I know, when it comes to our goals, everything seems important, right? But if you can‚Äôt decide which task is more important, just pick anything. Sometimes its enough to just do something.&lt;/p&gt;

&lt;p&gt;I don‚Äôt set a fixed time to work on any task because I suck at estimation and quite often some tasks really just take longer than you would‚Äôve expected. So why bother?&lt;/p&gt;

&lt;h4 id=&quot;dont-be-too-hard-on-yourself&quot;&gt;Don‚Äôt be too hard on yourself&lt;/h4&gt;
&lt;p&gt;Often times, stuff come up in the middle of the week that has to be attended. Other times, you just don‚Äôt feel like doing anything. You may have to put off some tasks until next week or you might not be able to do everything that you planned out to do. Or maybe you just have to take a break. And that‚Äôs okay. Enjoy where you are in the process but don‚Äôt linger around too long because that won‚Äôt help you achieve your goal either.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The key to achieving our goal is consistency. Having a schedule serves as a guide that helps us form a habit, which can then help us achieve our goals. In this fast paced-world, it‚Äôs okay to slow down and take our time to do things in our own pace. Living this way is much more enjoyable but still incredibly rewarding.&lt;/p&gt;</content><author><name></name></author><summary type="html">Have you ever failed to reach a goal? Like so many other people out there, I too, have set a goal for myself and in one way or another, failed to reach that goal on a set date.</summary></entry><entry><title type="html">Up and Running with Webpack</title><link href="http://localhost:4000/tutorial/2017/07/03/up-and-running-with-webpack.html" rel="alternate" type="text/html" title="Up and Running with Webpack" /><published>2017-07-03T09:34:24+02:00</published><updated>2017-07-03T09:34:24+02:00</updated><id>http://localhost:4000/tutorial/2017/07/03/up-and-running-with-webpack</id><content type="html" xml:base="http://localhost:4000/tutorial/2017/07/03/up-and-running-with-webpack.html">&lt;p&gt;One of the most important things you have to have in your toolkit these days is the ability to use &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt; ‚Äî and for a good reason. Webpack is a module bundler. It takes your assets ‚Äî your JS files, CSS, images, etc ‚Äî and outputs it as a single file, saving you with tons of trips back and forth from the server.&lt;/p&gt;

&lt;p&gt;I gotta admit, the first time I‚Äôve set up my own Webpack configuration file, I was pretty stoked and nervous and overwhelmed at the same time. But its important to know that Webpack is just another javascript file. It‚Äôs just a configuration file that you set up and run on the command line that will automatically does what you tell it to do. It is incredibly powerful, so its worth investing some time learning it.&lt;/p&gt;

&lt;p&gt;In this post, we‚Äôll set up a basic webpack configuration file.&lt;/p&gt;

&lt;h2 id=&quot;install-node-and-npm&quot;&gt;Install Node and NPM&lt;/h2&gt;
&lt;p&gt;To get started, we have to install &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; first. Node.js (or simply called ‚ÄúNode‚Äù) is an API that allows you to use Javascript on the server. We need to install it so that we can access &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; (or Node Package Manager). According to the Node.js website, NPM is the largest ecosystem of open source libraries in the world ‚Äî and that includes Webpack. If you‚Äôre pulling your hair out trying to implement a solution for your problem, look around in the npm website; a library might already exist that solves the same problem that you have.
NPM comes with the Node.js installer but make sure that you have the latest stable version of npm:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo npm install npm@latest -g&lt;/code&gt;
(You might have to omit ‚Äúsudo‚Äù if you‚Äôre using Windows)
Note: the &lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt; flag allows you to install npm ‚Äúglobally‚Äù, meaning you don‚Äôt need to install it again if you create another project because its readily available in your machine. Omitting the flag only installs it in the local folder where you ran the command.&lt;/p&gt;

&lt;p&gt;To check the version of npm that you have, run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm -v&lt;/code&gt; and, &lt;code class=&quot;highlighter-rouge&quot;&gt;‚Äãnode -v&lt;/code&gt; to check the version of node. At the time of this writing, I‚Äôm using v5.0.3 of NPM and v8.1.2 of Node.&lt;/p&gt;

&lt;h4 id=&quot;create-your-packagejson-file&quot;&gt;Create your package.json file&lt;/h4&gt;
&lt;p&gt;Once you‚Äôre in your project folder, run (&lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt;)[https://docs.npmjs.com/cli/init]
This creates a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; for you. It will ask you a bunch of questions about your project but you can just simply skip through them by pressing enter. Alternatively, you can skip the questions entirely by adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;-y || --yes&lt;/code&gt; flag.&lt;/p&gt;

&lt;p&gt;So what exactly is a &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file? Imagine that you want to upload your work on GitHub or you simply want to distribute your app. It doesn‚Äôt make sense to upload all your app‚Äôs dependencies* on GitHub because that can be a ridiculously huge list and you don‚Äôt want other developers to manually install those dependencies themselves. What &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; does is that it helps you keep track of your application‚Äôs dependencies. You can then upload this single file to GitHub and anyone who wants to run your application locally can just refer to it and run a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; to install everything in one go.&lt;/p&gt;

&lt;p&gt;*Dependencies are files or libraries that your app ‚Äúdepend‚Äù on. Like, it literally can‚Äôt run without it. If you used jquery in your code, then you could say that you have jquery as a dependency. Numerous libraries these days depend on other libraries to work properly, so its always nice just to be able to skip the headache of managing those manually.&lt;/p&gt;

&lt;h2 id=&quot;install-webpack&quot;&gt;Install webpack&lt;/h2&gt;
&lt;p&gt;Next we install Webpack:
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev webpack&lt;/code&gt;
Using the &lt;code class=&quot;highlighter-rouge&quot;&gt;--save-dev&lt;/code&gt; flag allows you to save it in your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; under the devDependencies object.&lt;/p&gt;

&lt;p&gt;The very first dependency that you install will always create a node_modules¬†folder in your project‚Äôs root folder. In this folder, you will find webpack and all the other libraries that it depends on (and its a LOT!). Every other libraries that you install via NPM will be dumped here from now on.&lt;/p&gt;

&lt;p&gt;This is how our folder structure looks like so far:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// index.js:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello World!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;// typical copy-pasted index.html file
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IE=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;
      &amp;lt;script src=&quot;https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
      &amp;lt;script src=&quot;https://oss.maxcdn.com/respond/1.4.2/respond.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;![endif]--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Up and Running with Webpack&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'app'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;the-4-concepts-of-webpack&quot;&gt;The 4 concepts of Webpack&lt;/h2&gt;
&lt;p&gt;Now that we have Webpack installed, let‚Äôs start configuring it! You can check for the version of webpack that you‚Äôre using by running npm list webpack¬†on the terminal. At the time of writing, I‚Äôm using v2.6.1.&lt;/p&gt;

&lt;p&gt;Webpack has four main concepts: Entry, Output, Loaders, and Plugins. We‚Äôll tackle them one by one.&lt;/p&gt;

&lt;h4 id=&quot;entry&quot;&gt;Entry&lt;/h4&gt;
&lt;p&gt;Start by creating a &lt;code class=&quot;highlighter-rouge&quot;&gt;webpack.config.js&lt;/code&gt; and write the code below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./path/to/entry/file.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; function and the &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt; object comes with Node and is a part of the CommonJS API:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; function allows us to import a module (or a file) into the current scope.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt; object allows us to export something from the current scope.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order for Webpack to work, we need to specify an entry point. Usually its the root &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; file but it can be whatever filename in whatever directory you like.&lt;/p&gt;

&lt;h4 id=&quot;output&quot;&gt;Output&lt;/h4&gt;
&lt;p&gt;Whenever we tell Webpack to bundle our assets, it also needs to know where the bundled application should live. For that, we need to specify an output property inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt; object.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./path/to/entry/file.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'dist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bundle.js'&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We first require the &lt;a href=&quot;https://nodejs.org/api/path.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt;&lt;/a&gt; module (which is also included in Node) so that it can resolve the file and directory paths for us. Then we use its &lt;a href=&quot;https://nodejs.org/api/path.html#path_path_resolve_paths&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;resolve&lt;/code&gt;&lt;/a&gt; method to process the absolute path. The &lt;a href=&quot;https://nodejs.org/api/globals.html#globals_dirname&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;__dirname&lt;/code&gt;&lt;/a&gt; returns the directory name of the current module.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt;¬†property let‚Äôs us specify the name of the file of the bundled application.
So in the code above, we say, find the &lt;code class=&quot;highlighter-rouge&quot;&gt;dist&lt;/code&gt;¬†directory in the current module and add a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle.js&lt;/code&gt;. We don‚Äôt have this file and folder created yet, but Webpack can do it for us.&lt;/p&gt;

&lt;h4 id=&quot;loaders&quot;&gt;Loaders&lt;/h4&gt;
&lt;p&gt;Next, we define the Loaders. Loaders are the transformations that are applied on your code. Let‚Äôs say you use a CSS preprocessor like LESS or SASS. By default, the browser doesn‚Äôt understand its syntax, so you need a specific loader that will compile these &lt;code class=&quot;highlighter-rouge&quot;&gt;.less&lt;/code&gt;¬†or &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt;¬†files into normal CSS so that the browser can understand it.&lt;/p&gt;

&lt;p&gt;There are &lt;a href=&quot;https://webpack.js.org/loaders/&quot;&gt;different loaders available&lt;/a&gt; and you can install them through NPM as well:
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev loader-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So, in the example below, we tell webpack that for every &lt;code class=&quot;highlighter-rouge&quot;&gt;.less&lt;/code&gt; file that it encounters (handled by the regular expression), apply these transformations.&lt;/p&gt;

&lt;p&gt;(I omitted the previous code that we wrote before for brevity)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;less$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'css-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'less-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note: after some trial and error, I found that the loaders are applied from bottom up. So the less-loader is applied first. You can read about these loaders in the &lt;a href=&quot;https://webpack.js.org/loaders/&quot;&gt;Webpack documentation&lt;/a&gt;.
You can test a variety of other files such as your JS, svg, png, etc files and run a specific loader for each one.&lt;/p&gt;

&lt;h4 id=&quot;plugins&quot;&gt;Plugins&lt;/h4&gt;
&lt;p&gt;According to the webpack documentation, plugins are ‚Äúmost commonly used (but not limited to) performing actions and custom functionality on chunks of bundled modules‚Äù.&lt;/p&gt;

&lt;p&gt;To put it simply: Once you‚Äôve bundled your assets, you can do a lot of other things with those bundled assets.&lt;/p&gt;

&lt;p&gt;The most common plugin that I use is &lt;a href=&quot;https://www.npmjs.com/package/html-webpack-plugin&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HtmlWebpackPlugin&lt;/code&gt;&lt;/a&gt; that you can install via npm. This plugin creates an HTML file(s) that will serve your webpack bundles:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -save-dev html-wepback-plugin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Plugins, unlike loaders, need to be required at the beginning of the file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;htmlWebpackPlugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'html-webpack-plugin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, in your &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt; object, create a new instance of HtmlWebpackPlugin object inside the plugins array:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./index.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, I specified a configuration object containing a template property inside the new HtmlWebpackPlugin instance. When I run webpack on the command line, HtmlWebpackPlugin takes the template HTML file and creates a new one in the &lt;code class=&quot;highlighter-rouge&quot;&gt;dist&lt;/code&gt; folder. This new HTML file will contain our bundled assets injected at the end of the &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;¬†tag.&lt;/p&gt;

&lt;h2 id=&quot;running-webpack&quot;&gt;Running Webpack&lt;/h2&gt;
&lt;p&gt;There are a couple of ways to run webpack and one of them (and probably the most convenient one) is to add a script in your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;¬†file. We don‚Äôt really need the &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;¬†key in the scripts object so we can just replace it.&lt;/p&gt;

&lt;p&gt;// package.json&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;production&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;webpack -p&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, in the terminal, run:
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm run production&lt;/code&gt;
Then, in the terminal, run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run production&lt;/code&gt;. This creates a production-ready file for your assets, meaning its all compiled and minified!&lt;/p&gt;

&lt;h4 id=&quot;bonus-webpack-dev-server&quot;&gt;Bonus: Webpack Dev Server&lt;/h4&gt;
&lt;p&gt;Probably my most favourite part of webpack (so far) is the development server. To put it simply, the webpack development server provides you with a server and live reloading.&lt;/p&gt;

&lt;p&gt;Live reloading is cool because the browser reloads or refreshes the entire app every time a file changes. You don‚Äôt have to manually do it yourself!&lt;/p&gt;

&lt;h4 id=&quot;setting-up-the-dev-server&quot;&gt;Setting up the dev server&lt;/h4&gt;
&lt;p&gt;Install webpack dev server from npm:
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save-dev webpack-dev-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, add another script in your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file:
&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;start&quot;: &quot;webpack-dev-server --open&quot;&lt;/code&gt;
The &lt;code class=&quot;highlighter-rouge&quot;&gt;--open&lt;/code&gt; flag lets you automatically open the browser on &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8080&lt;/code&gt;
Now, when you run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run start&lt;/code&gt;, it should open a browser for you and show you a page with the ‚ÄúHello World‚Äù text on it!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;And there you have it! This setup is pretty basic but there‚Äôs already so much you can do with this simple configuration. Webpack is a very powerful module bundler and it does¬†tons of other awesome things so I recommend that you check out their documentation, play around and have fun!&lt;/p&gt;

&lt;h4 id=&quot;where-to-go-from-here&quot;&gt;Where to go from here&lt;/h4&gt;
&lt;p&gt;Try fiddling around with Webpack a little more by setting up a configuration for your JS files. For example, if you want to use the &lt;a href=&quot;http://es6-features.org/#Constants&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ES6 syntax&lt;/code&gt;&lt;/a&gt;, you have to install a couple of loaders from &lt;a href=&quot;https://babeljs.io/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Babel&lt;/code&gt;&lt;/a&gt; via npm. If you want to use a library or a framework, just read their docs; they usually have handy sections on how to get started.&lt;/p&gt;</content><author><name></name></author><summary type="html">One of the most important things you have to have in your toolkit these days is the ability to use Webpack ‚Äî and for a good reason. Webpack is a module bundler. It takes your assets ‚Äî your JS files, CSS, images, etc ‚Äî and outputs it as a single file, saving you with tons of trips back and forth from the server.</summary></entry><entry><title type="html">JS Promises</title><link href="http://localhost:4000/tutorial/2017/06/07/js-promises.html" rel="alternate" type="text/html" title="JS Promises" /><published>2017-06-07T09:34:24+02:00</published><updated>2017-06-07T09:34:24+02:00</updated><id>http://localhost:4000/tutorial/2017/06/07/js-promises</id><content type="html" xml:base="http://localhost:4000/tutorial/2017/06/07/js-promises.html">&lt;p&gt;In the previous post, we used the XMLHttpRequest object which is a very simple and basic way of requesting data from the server. Recently, the ECMAScript 6 introduced a new API called Promises in the hopes of making asynchronous requests more pleasant. We‚Äôre gonna take a look at what Promises are and understand them through a little bit of an exercise.&lt;/p&gt;

&lt;h2 id=&quot;what-are-promises&quot;&gt;What are Promises?&lt;/h2&gt;
&lt;p&gt;I have to admit that when I first heard someone say, ‚ÄúIt returns a Promise‚Äù, I immediately go blank. What do you mean by ‚ÄúPromise‚Äù?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In all simplicity, Promises are just objects.&lt;/em&gt; They serve as placeholders for the data you‚Äôre retrieving that has not yet returned. A Promise object immediately returns even before the HTTP Request has been resolved.&lt;/p&gt;

&lt;p&gt;Promises have a &lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt; method. Therefore, a promise is considered &lt;code class=&quot;highlighter-rouge&quot;&gt;thenable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To understand the benefit of the &lt;code class=&quot;highlighter-rouge&quot;&gt;then&lt;/code&gt; method, let‚Äôs take a step back and see how a typical HTTP request is made &lt;em&gt;without&lt;/em&gt; a Promise.&lt;/p&gt;

&lt;p&gt;Suppose that you want to retrieve 2 sets of data from the server ‚Äî where the second dataset somewhat relies on the result of the first. You then write 2 async HTTP request you fire &lt;em&gt;another&lt;/em&gt; HTTP request from the callback function of the first request.&lt;/p&gt;

&lt;p&gt;This method can easily go out of hand, which is then referred to as ‚Äú &lt;a href=&quot;http://callbackhell.com/&quot;&gt;callback hell&lt;/a&gt; ‚Äú where you invoke callbacks from callbacks from callbacks. Even though there are multiple ways of making it not look too complicated, using the Promise API is much more cleaner and easier to maintain and understand.&lt;/p&gt;

&lt;h2 id=&quot;how-does-a-promise-work&quot;&gt;How does a Promise work?&lt;/h2&gt;
&lt;p&gt;A Promise takes a function as a callback. That function takes two arguments:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a function that is called when the request is resolved / successful (usually named ‚Äúresolve‚Äù)&lt;/li&gt;
  &lt;li&gt;another function that is called when the request has failed (usually named ‚Äúreject‚Äù)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that those 2 functions are already prepared for you; you just need to use it accordingly.&lt;/p&gt;

&lt;p&gt;Let‚Äôs create function that performs a simple asynchronous HTTP request. We wrap our HTTP request in a new Promise.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAnimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'GET'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'readystatechange'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Remember when I mentioned that the function arguments ‚Äì resolve and reject ‚Äì are already prepared for us? Notice how they are being used according to the result of the request.&lt;/p&gt;

&lt;p&gt;Above the &lt;code class=&quot;highlighter-rouge&quot;&gt;getAnimals&lt;/code&gt; function, we assign a GitHub Gist (that returns a json data) to a variable called &lt;code class=&quot;highlighter-rouge&quot;&gt;pets&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://gist.githubusercontent.com/JulianvBeek/99a950c6711215d41a88d184ab99d75c/raw/d8a4a71e4356e1f163d815b398a6b1984715db87/site.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAnimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We then call our &lt;code class=&quot;highlighter-rouge&quot;&gt;getAnimals&lt;/code&gt; function, passing the &lt;code class=&quot;highlighter-rouge&quot;&gt;pets&lt;/code&gt; variable as the argument:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‚Äò‚Ä¶‚Äô&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAnimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;‚Ä¶&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;getAnimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you may be wondering, what happens once the data has been successfully retrieved from the server? That‚Äôs when the &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; method comes in.&lt;/p&gt;

&lt;p&gt;When we call the &lt;code class=&quot;highlighter-rouge&quot;&gt;getAnimals&lt;/code&gt; function for the first time, it returns a new Promise object, which means that we get access to the &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; method takes a callback function. And inside that function, you can access the data that is returned. To catch any errors, we add the &lt;code class=&quot;highlighter-rouge&quot;&gt;.catch&lt;/code&gt; method at the end of the chain.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;getAnimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAnimals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Okay, that‚Äôs cool. But what if we need to call multiple HTTP requests?&lt;/em&gt;
To perform multiple HTTP requests, we call our &lt;code class=&quot;highlighter-rouge&quot;&gt;getAnimals&lt;/code&gt; function inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; method‚Äôs callback function. Remember how our &lt;code class=&quot;highlighter-rouge&quot;&gt;getAnimals&lt;/code&gt; function returns a new Promise object? That means we‚Äôll have access to another &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; method, which we can use once the second dataset has been successfully retrieved.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// call the get() function&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zooData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// do something with the second data set once it has returned&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zooData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;You could compare the Promise API to the step by step of making a burger. First, you run off to get the bottom bun (initial request). When I have my bottom bun, I can THEN put in the lettuce, THEN the patty, THEN some cheese, THEN tomatoes, and so on. If, for some reason I am missing a bottom bun, I have to return to the customer and tell them that we can‚Äôt make burgers anymore (stating the error)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;support&quot;&gt;Support&lt;/h2&gt;
&lt;p&gt;Note that Promises are not being supported across all browsers so you have to use polyfills!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Promises serve as placeholders for the data you‚Äôre retrieving that has not yet returned. It gives us to have access to a &lt;code class=&quot;highlighter-rouge&quot;&gt;.then&lt;/code&gt; method which allows us to access the data that has been returned. Promises makes asynchronous HTTP request easier to understand and maintain, avoiding what is known as ‚Äúcallback hell‚Äù.&lt;/p&gt;</content><author><name></name></author><summary type="html">In the previous post, we used the XMLHttpRequest object which is a very simple and basic way of requesting data from the server. Recently, the ECMAScript 6 introduced a new API called Promises in the hopes of making asynchronous requests more pleasant. We‚Äôre gonna take a look at what Promises are and understand them through a little bit of an exercise.</summary></entry></feed>